{"version":3,"sources":["StateProvider.js","Header.js","firebase.js","SidebarOption.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","alt","displayname","src","photoURL","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarOption","Icon","title","id","addChannelOption","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","displayName","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","channel","Message","message","timestamp","userImage","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","onChange","e","target","toLowerCase","type","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","orderBy","actionTypes","state","action","console","log","Login","disaptch","Button","signInWithPopup","then","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f50549ca.chunk.js","sourcesContent":["import React , {createContext, useContext, useReducer} from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children}) => (\n    <StateContext.Provider value = {useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import React from \"react\";\nimport './Header.css';\nimport {Avatar, Input} from '@material-ui/core';\n\nimport SearchIcon from '@material-ui/icons/Search'\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\nimport { useStateValue } from \"./StateProvider\";\n\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\n\n\nfunction Header() {\n    const [{user}] =useStateValue();\n    return (\n        <div className=\"header\">\n        <div className=\"header_left\">\n            \n            {/* Avatars que vai a pic do cabloco*/}\n\n\n        <Avatar\n            className=\"header_avatar\"\n            alt={user?.displayname}\n            src={user?.photoURL}\n            />\n\n            {/* BOOK icon VEJA QUE FOI IMPORTADO EM CIMA */}\n            <MenuBookIcon/>\n        </div>  \n        <div className='header_search'>\n            {/* search icon denrtro do placeholder */}\n                <SearchIcon />\n                <input placeholder = \"search Slakin world\" /> \n                {/* input */}\n\n        </div>\n        <div className=\"header_right\">\n            {/* help icon */}\n            <HelpOutlineIcon />\n        </div>\n        </div>\n    )\n}\n\nexport default Header\n\n\n\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDWheWGwYF9KhmtruEKcZaGs5TcXJPWzVE\",\n    authDomain: \"slacking-app.firebaseapp.com\",\n    databaseURL: \"https://slacking-app.firebaseio.com\",\n    projectId: \"slacking-app\",\n    storageBucket: \"slacking-app.appspot.com\",\n    messagingSenderId: \"177605058395\",\n    appId: \"1:177605058395:web:5562b1e2a7fa875a21047e\",\n    measurementId: \"G-BW795L9PVS\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  export { auth, provider };\n  export default db;\n\n\n\n","import React from 'react';\nimport './SidebarOption.css';\nimport { useHistory } from 'react-router-dom';\nimport db from './firebase';\n\nfunction SidebarOption({Icon, title, id, addChannelOption}) {\n    const history = useHistory();\n\n    const selectChannel = () => {\n        if (id) {\n            if (id) {\n                history.push(`/room/${id}`);\n            } else {\n                history.push(title);\n            }\n        }\n    };\n    \n    const addChannel = () => { \n        const channelName = prompt('Please enter the channel name');\n\n        if(channelName) {\n            db.collection('rooms').add({\n                name:channelName\n            })\n        }\n    };\n     \n    return (\n        <div className=\"sidebarOption\" \n        onClick={addChannelOption ? addChannel : selectChannel}\n        >\n            {Icon && <Icon className=\"sidebarOption__icon\" />}\n            {Icon ?( <h3>\n                {title}\n            </h3>\n            ):(<h3 className=\"sidebarOption__channel\">\n                <span className = \"sidebarOption__hash\">#</span> {title}\n            </h3>)}\n        </div>\n    );\n}\n\nexport default SidebarOption;\n","import React, {useState, useEffect} from 'react';\nimport './Sidebar.css';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport SidebarOption from './SidebarOption';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport db from './firebase';\nimport { useStateValue } from './StateProvider';\n\nfunction Sidebar() {\n    const [channels, setChannels] = useState([]);\n    const [{user}] = useStateValue();\n\n    useEffect(() => {\n        //run this code ONCE when the sidebar component loads \n        db.collection('rooms').onSnapshot(snapshot => (\n            setChannels(\n                snapshot.docs.map((doc)=>({\n                id : doc.id,\n                name : doc.data().name,\n            }))\n            )\n            )\n        );\n    }, []);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar_header\">\n            <div className=\"sidebar_info\">    \n            <h2>Slacking World</h2>\n            <h3>\n                <FiberManualRecordIcon/>\n                {user?.displayName}\n            </h3>\n            </div>\n\n            <CreateIcon/>    \n        </div>\n        <SidebarOption Icon={InsertCommentIcon} title=\"Threads\"/>\n        <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\"/>\n        <SidebarOption Icon={DraftsIcon} title=\"Saved Items\"/>\n        <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\"/>\n        <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\"/>\n        <SidebarOption Icon={AppsIcon} title=\"Apps\"/>\n        <SidebarOption Icon={FileCopyIcon} title=\"FileBrowser\"/>\n        <SidebarOption Icon={ExpandLessIcon} title=\"Show less\"/>\n        <hr/>\n        <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\"  />\n        <hr/>\n        <SidebarOption Icon = {AddIcon} addChannelOption title = 'Add Channel' />\n\n        {channels.map(channel => (\n            <SidebarOption title = {channel.name} id = {channel.id}/>\n        ))}\n\n        </div> \n    )\n}\n\nexport default Sidebar;\n\n","import React from 'react';\nimport \"./Message.css\"; \n\nfunction Message({message, timestamp, user, userImage }) {\n    return (\n        <div className =\"message\">\n            <img src ={userImage} alt=\"\"/>\n            <div className=\"message__info\">\n                <h4>\n                    {user} <span className=\"message__timestamp\">{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n                <p>{message}</p>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Message;\n","import React, { useState } from 'react'\nimport \"./ChatInput.css\"\nimport { useStateValue } from './StateProvider';\nimport db from './firebase';\nimport firebase from 'firebase';\n//import { Button } from '@material-ui/core'\nfunction ChatInput({channelName, channelId}) {\n    const [input, setInput] = useState(\"\");\n    const [{user}] = useStateValue();\n    \n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        if(channelId){\n            db.collection('rooms').doc(channelId).collection('messages').add({\n            message:input,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n            user:user.displayName,\n            userImage: user.photoURL,\n\n        });\n    }\n    setInput(\"\"); \n    };\n    \n    return (\n        <div className =\"chatInput\">\n            <form>\n                <input\n                value ={input}\n                onChange={(e)=>setInput(e.target.value)} \n                placeholder={`Message #${channelName?.toLowerCase()}`} />\n                <button type=\"sumbit\" onClick={sendMessage}>SEND</button>\n            </form>\n            \n        </div>\n    );\n}\n\nexport default ChatInput;\n","import React, { useEffect, useState } from 'react'\nimport './Chat.css';\nimport { useParams } from 'react-router-dom';\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\"\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\"\nimport db from './firebase';\nimport Message from './Message';\nimport ChatInput from './ChatInput'\n\n  function Chat() {\n      const { roomId} = useParams();\n      const [roomDetails, setRoomDetails] = useState(null);\n      const [roomMessages, setRoomMessages] = useState([]);\n\n \n      useEffect(() => {\n        if(roomId){\n            db.collection(\"rooms\").doc(roomId)\n            .onSnapshot((snapshot) => setRoomDetails(snapshot.data()))\n        }\n\n        db.collection(\"rooms\")\n        .doc(roomId)\n        .collection('messages')\n        .orderBy('timestamp',\"asc\")\n        .onSnapshot((snapshot) => setRoomMessages(snapshot.docs.map((doc) => doc.data())))\n      },[roomId]);\n    \n      return (\n          <div className=\"chat\">\n            {/* <h2>You are in the {roomId} room</h2> */}\n            <div className=\"chat__header\">\n                <div className=\"chat__headerLeft\">\n                    <h4 className=\"chat__channelName\">\n                        <strong>  #{roomDetails?.name}  </strong>\n                        <StarBorderOutlinedIcon/>\n                    </h4>\n                </div> \n                <div className=\"chat__headerRight\">\n                    <p>\n                    <InfoOutlinedIcon /> Details\n                    </p>\n                </div>\n            </div>\n            <div className=\"chat__messages\">\n            {/* Messages component will come here */}\n            {roomMessages.map(({message, timestamp, user, userImage}) => (\n                <Message\n                message={message}\n                timestamp ={timestamp}\n                user ={user}\n                userImage = {userImage}\n                />\n            ))}\n            </div>\n            <ChatInput channelName = {roomDetails?.name} channelId ={roomId} />  \n          </div>\n      );\n  }\n  \n  export default Chat\n  ","export const initialState = {\n    user:null,\n};\n\nexport const actionTypes = {\n    SET_USER : \"SET_USER\",\n}; \n\nconst reducer = (state, action) => {\n    console.log(action);\n\n    switch(action.type) {\n        case actionTypes.SET_USER:\n            return{\n                ...state,\n                user: action.user\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport \"./Login.css\";\nimport { Button } from '@material-ui/core';\nimport { auth, provider } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport { actionTypes } from './reducer';\n//import { provider } from './firebase';\n\nfunction Login() { \n    const [state, disaptch] = useStateValue();\n\n    const signIn = () => {\n        auth\n        .signInWithPopup(provider)\n        .then((result) => {\n            console.log(result);\n            disaptch({\n                type: actionTypes.SET_USER,\n                user:result.user\n            })\n        })\n        .catch((error) =>{\n            alert(error.message)\n        });\n    };\n    return (\n        <div className=\"login\">\n            <div className=\"login__container\">\n                <img src=\"https://www.freevector.com/uploads/vector/preview/30330/Colorful_Abstract_Wave_Background.jpg\" alt=\"\"/>\n\n                <h1>Sign in to Slacking World</h1>\n                <p>slacking-app.web.app</p>\n                <Button onClick={signIn}>Sign in with Google</Button>\n\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Chat from './Chat';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  //const [user, setUser] = useState(null); \n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login/>\n        ):(\n      <>      \n      <Header />\n      <div className=\"app__body\">\n        <Sidebar/>\n        <Switch>\n          <Route path = \"/room/:roomId\">\n            <Chat/>\n          </Route>\n          <Route path = \"/\">\n            <h1>Welcome SLacking fan</h1>\n          </Route>\n        </Switch>\n      </div>\n      </>\n      )}\n      </Router>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, {initialState} from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState} reducer = {reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}